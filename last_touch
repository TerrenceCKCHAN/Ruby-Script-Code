#!/usr/bin/ruby
# last_touch
require 'date'

def removeFile(directory, file)
  directory.delete(file)
end

def extractDateTime_revId(rev_id, date_timeRaw)
  date_time      = date_timeRaw.split(" ")
  dateRaw        = date_time[4] + date_time[1] + date_time[2]
  date           = Date.parse(dateRaw)
  time           = date_time[3]
  timeZoneRaw    = date_time[5]
  timeZone       = timeZoneRaw[0..2] + ":" + timeZoneRaw[3..4]
  dateTime_revId = "#{date}" + "T" + "#{time}" + "#{timeZone}" + "#{rev_id}"  
  return "#{dateTime_revId}"
end

def printAllResults(res, max, dirFiles)
  res.sort_by {|tdId, fName, _| [*tdId.codepoints.map(&:-@), fName]}
  res.each {|tdId, fName, author| puts tdId + fName.ljust(max + 1) + author }
  sortedDirFiles = dirFiles.sort
  sortedDirFiles.each do |f|
    puts "[***not under version control***]: #{f}"
  end
end


if ARGV.count == 0 then
  targetDir = `pwd`
elsif ARGV.count == 1 then
  subDir    = ARGV[0]
  targetDir = `pwd`.strip + "/" + subDir 
  if !(File.exist? File.expand_path(targetDir)) then
    puts "Directory does not exist"
    exit(1)
  else
    Dir.chdir(targetDir)
  end
else 
  puts "Incorrect number of arguments"
  exit(1)
end

dirFiles = Dir.glob("**")
gitFiles = `git ls-files`.split("\n")
res      = Array.new
max      = 0

gitFiles.each do |f|
  removeFile(dirFiles, f) 
  rev_id         = " [" + `git log --pretty=format:"%h" -1 #{f}`[0..4] + "]: "
  date_timeRaw   = `git log --pretty=format:"%ad" #{f}`
  dateTime_revId = extractDateTime_revId(rev_id, date_timeRaw)
  author         = "(" + `git log --pretty=format:"%an" -1 #{f}` + ")"
  if max <= f.length then
    max = f.length
  end
  res.push([dateTime_revId, f, author])
end
printAllResults(res, max, dirFiles)




